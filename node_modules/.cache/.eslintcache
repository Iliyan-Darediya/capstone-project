[{"/Users/iliyandarediya/My Code/movie-matcher/src/index.js":"1","/Users/iliyandarediya/My Code/movie-matcher/src/reportWebVitals.js":"2","/Users/iliyandarediya/My Code/movie-matcher/src/App.js":"3","/Users/iliyandarediya/My Code/movie-matcher/src/components/Main.js":"4","/Users/iliyandarediya/My Code/movie-matcher/src/components/NewSession.js":"5","/Users/iliyandarediya/My Code/movie-matcher/src/components/Chooser.js":"6","/Users/iliyandarediya/My Code/movie-matcher/src/components/Cheecker.js":"7","/Users/iliyandarediya/My Code/movie-matcher/src/components/ExistingSession.js":"8","/Users/iliyandarediya/My Code/movie-matcher/src/firebase.js":"9","/Users/iliyandarediya/My Code/movie-matcher/src/Context.js":"10","/Users/iliyandarediya/My Code/movie-matcher/src/components/MovieCard.js":"11","/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/index.js":"12"},{"size":381,"mtime":1620122604525,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1619945152458,"results":"15","hashOfConfig":"14"},{"size":1370,"mtime":1622117287435,"results":"16","hashOfConfig":"14"},{"size":211,"mtime":1622116683777,"results":"17","hashOfConfig":"14"},{"size":2611,"mtime":1622203604141,"results":"18","hashOfConfig":"14"},{"size":2364,"mtime":1622242721926,"results":"19","hashOfConfig":"14"},{"size":524,"mtime":1620812635537,"results":"20","hashOfConfig":"14"},{"size":1280,"mtime":1622117357962,"results":"21","hashOfConfig":"14"},{"size":609,"mtime":1620038350608,"results":"22","hashOfConfig":"14"},{"size":3662,"mtime":1622204137020,"results":"23","hashOfConfig":"14"},{"size":1351,"mtime":1622243281136,"results":"24","hashOfConfig":"14"},{"size":197,"mtime":1646435004480,"results":"25","hashOfConfig":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1jb6j2c",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"irvusq","/Users/iliyandarediya/My Code/movie-matcher/src/index.js",[],["55","56"],"/Users/iliyandarediya/My Code/movie-matcher/src/reportWebVitals.js",[],["57","58"],"/Users/iliyandarediya/My Code/movie-matcher/src/App.js",[],"/Users/iliyandarediya/My Code/movie-matcher/src/components/Main.js",[],"/Users/iliyandarediya/My Code/movie-matcher/src/components/NewSession.js",[],"/Users/iliyandarediya/My Code/movie-matcher/src/components/Chooser.js",[],"/Users/iliyandarediya/My Code/movie-matcher/src/components/Cheecker.js",["59"],"import {useContext, useEffect} from \"react\";\nimport {Context} from '../Context'\n\nfunction Cheecker() {\n    const {checkMatches} = useContext(Context)\n    const {result} = useContext(Context)\n    const {obj} = useContext(Context)\n\n    useEffect(()=>checkMatches(),[obj])\n    \n    let i = result.map(r=><h9>{r}</h9>)\n    return (\n        <div className=\"App\">\n        <header className=\"App-header\">\n            <h3>Hello from Cheecker</h3>\n            {i}\n        </header>\n        </div>\n    );\n}\n  \nexport default Cheecker;","/Users/iliyandarediya/My Code/movie-matcher/src/components/ExistingSession.js",[],"/Users/iliyandarediya/My Code/movie-matcher/src/firebase.js",[],"/Users/iliyandarediya/My Code/movie-matcher/src/Context.js",["60","61"],"import React,{useState,useEffect} from \"react\"\nimport {db} from \"./firebase\"\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n\n    const [currentId,setCurrentId] = useState(3)\n    const [name,setName] = useState(\"Emily\")\n    const [obj,setObj] = useState({})\n    const [result,setResult] = useState([])\n\n    useEffect(()=>{\n        //------THE MAIN METHOD UNCOMMENT IT BEFORE DEPLOYMENT-----------//\n        db.collection(\"User\").onSnapshot(snapshot=>{\n            let changes = snapshot.docChanges()\n            changes.forEach(item=>{\n                //console.log(\"From context \"+item.doc.data())\n                //console.log(\"From context \"+item.doc.id)\n                if(parseInt(item.doc.id)>=0){\n                    setCurrentId(item.doc.id)\n                }\n            })\n        }) \n    },[])\n    \n    //console.log(\"current id from context \"+currentId)\n    \n    const requestNewId = name =>{\n        setName(name)\n        setCurrentId(prevId=>{\n            let currentId = parseInt(prevId)\n            currentId++\n            return(currentId.toString())\n        })\n        db.collection(\"User\").doc(currentId).set({\n            [name] : [\"KevinAddedItem0\"]\n        },{merge:true})\n    }\n\n    const handleDelete = id =>{\n        db.collection(\"User\").doc(id).delete()\n        console.log(\"handleDelete button Clicked\")\n    }\n\n    const handleAdd = name =>{\n        setName(name)\n        db.collection(\"User\").doc(currentId).set({\n            [name] : [\"KevinAddedItem0\"]\n        },{merge:true})\n    }\n\n    const addMovie=(movieName)=>{\n        db.collection(\"User\").doc(currentId).update({\n            [name]:window.firebase.firestore.FieldValue.arrayUnion(movieName)\n        })\n    }\n\n    const checkMatches=()=>{\n        \n        /* var docRef = db.collection(\"User\").doc(currentId.toString());\n        docRef.get().then((doc) => {\n            if (doc.exists) {\n                setObj(doc.data());\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document! \" + currentId);\n            }\n        }).catch((error) => {\n            console.log(\"Error getting document:\", error);\n        }); */\n        db.collection(\"User\").onSnapshot(snapshot=>{\n            let changes = snapshot.docChanges()\n            changes.forEach(item=>{\n                if(item.doc.id==currentId){\n                    setObj(item.doc.data())\n                    setCurrentId(item.doc.id)\n                }\n                //console.log(item.doc.id)\n                /* if(parseInt(item.doc.id)>=0){\n                    setCurrentId(item.doc.id)\n                } */\n            })\n        }) \n        console.log(obj)\n    \n        let bunch = []\n        for (const [key, value] of Object.entries(obj)) {\n            value.map(item=>bunch.push(item))\n            //console.log(`${value}`);\n        }\n        let findDuplicates = arr => arr.filter((item, index) => arr.indexOf(item) !== index)  \n        console.log(findDuplicates(bunch))\n        setResult(findDuplicates(bunch)); \n        //console.log(obj)\n        console.log(\"current Id \" + currentId)\n        console.log(\"result is \"+result)\n    }\n\n    return (\n        <Context.Provider value={\n            {\n                setName,\n                name,\n                setCurrentId ,\n                currentId,\n                handleDelete,\n                handleAdd,\n                addMovie,\n                requestNewId,\n                checkMatches,\n                result,\n                obj\n            }\n        }>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}","/Users/iliyandarediya/My Code/movie-matcher/src/components/MovieCard.js",[],"/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/index.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":9,"column":34,"nodeType":"70","endLine":9,"endColumn":39,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":75,"column":31,"nodeType":"74","messageId":"75","endLine":75,"endColumn":33},{"ruleId":"76","severity":1,"message":"77","line":88,"column":21,"nodeType":"78","messageId":"79","endLine":88,"endColumn":24},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],["80"],["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkMatches'. Either include it or remove the dependency array.","ArrayExpression",["82"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [checkMatches, obj]",{"range":"85","text":"86"},[263,268],"[checkMatches, obj]"]