[{"/Users/iliyandarediya/My Code/movie-matcher/src/index.js":"1","/Users/iliyandarediya/My Code/movie-matcher/src/reportWebVitals.js":"2","/Users/iliyandarediya/My Code/movie-matcher/src/App.js":"3","/Users/iliyandarediya/My Code/movie-matcher/src/components/Main.js":"4","/Users/iliyandarediya/My Code/movie-matcher/src/components/NewSession.js":"5","/Users/iliyandarediya/My Code/movie-matcher/src/components/Chooser.js":"6","/Users/iliyandarediya/My Code/movie-matcher/src/components/Cheecker.js":"7","/Users/iliyandarediya/My Code/movie-matcher/src/components/ExistingSession.js":"8","/Users/iliyandarediya/My Code/movie-matcher/src/firebase.js":"9","/Users/iliyandarediya/My Code/movie-matcher/src/Context.js":"10","/Users/iliyandarediya/My Code/movie-matcher/src/components/MovieCard.js":"11","/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/index.js":"12","/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/App.js":"13","/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/Main.js":"14","/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/ExistingSession.js":"15","/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/NewSession.js":"16","/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/Context.js":"17","/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/firebase.js":"18","/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/Chooser.js":"19","/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/MovieCard.js":"20","/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/Cheecker.js":"21"},{"size":381,"mtime":1620122604525,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1619945152458,"results":"24","hashOfConfig":"23"},{"size":1370,"mtime":1622117287435,"results":"25","hashOfConfig":"23"},{"size":211,"mtime":1622116683777,"results":"26","hashOfConfig":"23"},{"size":2611,"mtime":1622203604141,"results":"27","hashOfConfig":"23"},{"size":2364,"mtime":1622242721926,"results":"28","hashOfConfig":"23"},{"size":524,"mtime":1620812635537,"results":"29","hashOfConfig":"23"},{"size":1280,"mtime":1622117357962,"results":"30","hashOfConfig":"23"},{"size":609,"mtime":1620038350608,"results":"31","hashOfConfig":"23"},{"size":3662,"mtime":1622204137020,"results":"32","hashOfConfig":"23"},{"size":1351,"mtime":1622243281136,"results":"33","hashOfConfig":"23"},{"size":351,"mtime":1646436494442,"results":"34","hashOfConfig":"35"},{"size":1459,"mtime":1648238611505,"results":"36","hashOfConfig":"35"},{"size":264,"mtime":1646437145449,"results":"37","hashOfConfig":"35"},{"size":1436,"mtime":1646437090314,"results":"38","hashOfConfig":"35"},{"size":2476,"mtime":1646693574700,"results":"39","hashOfConfig":"35"},{"size":4159,"mtime":1647835399240,"results":"40","hashOfConfig":"35"},{"size":609,"mtime":1646436658310,"results":"41","hashOfConfig":"35"},{"size":2445,"mtime":1647835883833,"results":"42","hashOfConfig":"35"},{"size":1351,"mtime":1648237297436,"results":"43","hashOfConfig":"35"},{"size":1762,"mtime":1648238696884,"results":"44","hashOfConfig":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1jb6j2c",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"irvusq",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/iliyandarediya/My Code/movie-matcher/src/index.js",[],["94","95"],"/Users/iliyandarediya/My Code/movie-matcher/src/reportWebVitals.js",[],["96","97"],"/Users/iliyandarediya/My Code/movie-matcher/src/App.js",[],"/Users/iliyandarediya/My Code/movie-matcher/src/components/Main.js",[],"/Users/iliyandarediya/My Code/movie-matcher/src/components/NewSession.js",[],"/Users/iliyandarediya/My Code/movie-matcher/src/components/Chooser.js",[],"/Users/iliyandarediya/My Code/movie-matcher/src/components/Cheecker.js",["98"],"import {useContext, useEffect} from \"react\";\nimport {Context} from '../Context'\n\nfunction Cheecker() {\n    const {checkMatches} = useContext(Context)\n    const {result} = useContext(Context)\n    const {obj} = useContext(Context)\n\n    useEffect(()=>checkMatches(),[obj])\n    \n    let i = result.map(r=><h9>{r}</h9>)\n    return (\n        <div className=\"App\">\n        <header className=\"App-header\">\n            <h3>Hello from Cheecker</h3>\n            {i}\n        </header>\n        </div>\n    );\n}\n  \nexport default Cheecker;","/Users/iliyandarediya/My Code/movie-matcher/src/components/ExistingSession.js",[],"/Users/iliyandarediya/My Code/movie-matcher/src/firebase.js",[],"/Users/iliyandarediya/My Code/movie-matcher/src/Context.js",["99","100"],"import React,{useState,useEffect} from \"react\"\nimport {db} from \"./firebase\"\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n\n    const [currentId,setCurrentId] = useState(3)\n    const [name,setName] = useState(\"Emily\")\n    const [obj,setObj] = useState({})\n    const [result,setResult] = useState([])\n\n    useEffect(()=>{\n        //------THE MAIN METHOD UNCOMMENT IT BEFORE DEPLOYMENT-----------//\n        db.collection(\"User\").onSnapshot(snapshot=>{\n            let changes = snapshot.docChanges()\n            changes.forEach(item=>{\n                //console.log(\"From context \"+item.doc.data())\n                //console.log(\"From context \"+item.doc.id)\n                if(parseInt(item.doc.id)>=0){\n                    setCurrentId(item.doc.id)\n                }\n            })\n        }) \n    },[])\n    \n    //console.log(\"current id from context \"+currentId)\n    \n    const requestNewId = name =>{\n        setName(name)\n        setCurrentId(prevId=>{\n            let currentId = parseInt(prevId)\n            currentId++\n            return(currentId.toString())\n        })\n        db.collection(\"User\").doc(currentId).set({\n            [name] : [\"KevinAddedItem0\"]\n        },{merge:true})\n    }\n\n    const handleDelete = id =>{\n        db.collection(\"User\").doc(id).delete()\n        console.log(\"handleDelete button Clicked\")\n    }\n\n    const handleAdd = name =>{\n        setName(name)\n        db.collection(\"User\").doc(currentId).set({\n            [name] : [\"KevinAddedItem0\"]\n        },{merge:true})\n    }\n\n    const addMovie=(movieName)=>{\n        db.collection(\"User\").doc(currentId).update({\n            [name]:window.firebase.firestore.FieldValue.arrayUnion(movieName)\n        })\n    }\n\n    const checkMatches=()=>{\n        \n        /* var docRef = db.collection(\"User\").doc(currentId.toString());\n        docRef.get().then((doc) => {\n            if (doc.exists) {\n                setObj(doc.data());\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document! \" + currentId);\n            }\n        }).catch((error) => {\n            console.log(\"Error getting document:\", error);\n        }); */\n        db.collection(\"User\").onSnapshot(snapshot=>{\n            let changes = snapshot.docChanges()\n            changes.forEach(item=>{\n                if(item.doc.id==currentId){\n                    setObj(item.doc.data())\n                    setCurrentId(item.doc.id)\n                }\n                //console.log(item.doc.id)\n                /* if(parseInt(item.doc.id)>=0){\n                    setCurrentId(item.doc.id)\n                } */\n            })\n        }) \n        console.log(obj)\n    \n        let bunch = []\n        for (const [key, value] of Object.entries(obj)) {\n            value.map(item=>bunch.push(item))\n            //console.log(`${value}`);\n        }\n        let findDuplicates = arr => arr.filter((item, index) => arr.indexOf(item) !== index)  \n        console.log(findDuplicates(bunch))\n        setResult(findDuplicates(bunch)); \n        //console.log(obj)\n        console.log(\"current Id \" + currentId)\n        console.log(\"result is \"+result)\n    }\n\n    return (\n        <Context.Provider value={\n            {\n                setName,\n                name,\n                setCurrentId ,\n                currentId,\n                handleDelete,\n                handleAdd,\n                addMovie,\n                requestNewId,\n                checkMatches,\n                result,\n                obj\n            }\n        }>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}","/Users/iliyandarediya/My Code/movie-matcher/src/components/MovieCard.js",[],"/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/index.js",[],["101","102"],"/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/App.js",[],"/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/Main.js",[],"/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/ExistingSession.js",[],"/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/NewSession.js",[],"/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/Context.js",["103","104"],"import React,{useState,useEffect} from \"react\"\nimport {db} from \"./firebase\"\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n\n    const [currentId,setCurrentId] = useState(3)\n    const [name,setName] = useState(\"Emily\")\n    const [obj,setObj] = useState({})\n    const [result,setResult] = useState([])\n\n    useEffect(()=>{\n        //------THE MAIN METHOD UNCOMMENT IT BEFORE DEPLOYMENT-----------//\n        db.collection(\"User\").onSnapshot(snapshot=>{\n            let changes = snapshot.docChanges()\n            changes.forEach(item=>{\n                //console.log(\"From context \"+item.doc.data())\n                //console.log(\"From context \"+item.doc.id)\n                if(parseInt(item.doc.id)>=0){\n                    setCurrentId(item.doc.id)\n                }\n                if(item.doc.id==currentId){\n                    setObj(item.doc.data())\n                    setCurrentId(item.doc.id)\n                }\n            })\n        }) \n        /* db.collection(\"User\").onSnapshot(snapshot=>{\n            let changes = snapshot.docChanges()\n            changes.forEach(item=>{\n                \n                //console.log(item.doc.id)\n                if(parseInt(item.doc.id)>=0){\n                    setCurrentId(item.doc.id)\n                } \n            })\n        }) */\n    },[])\n    \n    //console.log(\"current id from context \"+currentId)\n    \n    const requestNewId = name =>{\n        setName(name)\n        setCurrentId(prevId=>{\n            let currentId = parseInt(prevId)\n            currentId++\n            return(currentId.toString())\n        })\n        db.collection(\"User\").doc(currentId).set({\n            [name] : [\"KevinAddedItem0\"]\n        },{merge:true})\n    }\n\n    const handleDelete = id =>{\n        db.collection(\"User\").doc(id).delete()\n        console.log(\"handleDelete button Clicked\")\n    }\n\n    const handleAdd = name =>{\n        setName(name)\n        db.collection(\"User\").doc(currentId).set({\n            [name] : [\"KevinAddedItem0\"]\n        },{merge:true})\n    }\n\n    const addMovie=(movie_id)=>{\n        db.collection(\"User\").doc(currentId).update({\n            [name]:window.firebase.firestore.FieldValue.arrayUnion(movie_id)\n        })\n    }\n\n    const checkMatches=(id)=>{\n        \n        /* var docRef = db.collection(\"User\").doc(currentId.toString());\n        docRef.get().then((doc) => {\n            if (doc.exists) {\n                setObj(doc.data());\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document! \" + currentId);\n            }\n        }).catch((error) => {\n            console.log(\"Error getting document:\", error);\n        }); */\n         \n        //console.log(obj)\n        \n        /* db.collection(\"User\").onSnapshot(snapshot=>{\n            let changes = snapshot.docChanges()\n            changes.forEach(item=>{\n                if(item.doc.id==id){\n                    setObj(item.doc.data())\n                    setCurrentId(item.doc.id)\n                }\n                //console.log(item.doc.id)\n                if(parseInt(item.doc.id)>=0){\n                    setCurrentId(item.doc.id)\n                } \n            })\n        }) */\n    \n        let bunch = []\n        /* for (const [key, value] of Object.entries(obj)) {\n            console.log(key)\n            //console.log(`${value}`);\n        } */\n        let findDuplicates = arr => arr.filter((item, index) => arr.indexOf(item) !== index)  \n        //console.log(findDuplicates(bunch))\n        setResult(findDuplicates(bunch)); \n        console.log(obj)\n        console.log(\"current Id \" + currentId)\n        //console.log(\"result is \"+result)\n    }\n\n    return (\n        <Context.Provider value={\n            {\n                setName,\n                name,\n                setCurrentId ,\n                currentId,\n                handleDelete,\n                handleAdd,\n                addMovie,\n                requestNewId,\n                checkMatches,\n                result,\n                obj\n            }\n        }>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}","/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/firebase.js",[],"/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/Chooser.js",["105"],"import { Link } from \"react-router-dom\";\nimport {useContext, useState, useEffect} from \"react\";\nimport {Context} from '../Context'\nimport MovieCard from \"./MovieCard\"\n\n\nfunction Chooser() {\n\n    const {currentId} = useContext(Context)\n    //const {addMovie} = useContext(Context)\n    const [query, setQuery] = useState('');\n    //create the state for movies, and update that state appropriate\n    const [movies, setMovies] = useState([]);\n    \n    const searchMovies = async (e) => {\n        e.preventDefault();    \n        const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n        try {\n            const res = await fetch(url);\n            const data  = await res.json();\n            setMovies(data.results);\n        }catch(err){\n            console.error(err);\n        }\n    }\n    /* useEffect(()=>{\n        console.log(movies)\n    },[movies]) */\n\n    \n    return (\n        <>\n            <div className=\"p-8 bg-blue-200 flex justify-center\">\n                <div className=\"grid grid-cols-2 gap-4 p-12 border-2 w-2/6 h-4/6 justify-items-center\">\n                    <div className=\"\">\n                        <h3>Hello from Chooser</h3>\n                        <h3>current Id is {currentId}</h3>\n                        {/* <button onClick={()=>addMovie(\"3\",\"UCL\")}>add Movie</button> */}\n                    </div>\n                    <div>\n                        <button><Link to = \"/cheecker\">Go to Cheecker</Link></button>\n                        <form className=\"form\" onSubmit={searchMovies}>\n                            <label className=\"label\" htmlFor=\"query\">Movie Name</label>\n                            <input className=\"input\" type=\"text\" name=\"query\"\n                                placeholder=\"i.e. Jurassic Park\"\n                                value={query} onChange={(e) => setQuery(e.target.value)}\n                                />\n                            <button className=\"button\" type=\"submit\">Search</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <div className= \"grid grid-cols-3 gap-4 p-12 bg-gray-900\">\n                {movies.filter(movie => movie.poster_path).map(movie => (\n                    <MovieCard movie={movie} key={movie.id} />\n                ))}\n            </div> \n        </>\n    );\n}\n  \nexport default Chooser;","/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/MovieCard.js",[],"/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/Cheecker.js",["106","107","108","109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":9,"column":34,"nodeType":"119","endLine":9,"endColumn":39,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":75,"column":31,"nodeType":"123","messageId":"124","endLine":75,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":88,"column":21,"nodeType":"127","messageId":"128","endLine":88,"endColumn":24},{"ruleId":"111","replacedBy":"129"},{"ruleId":"113","replacedBy":"130"},{"ruleId":"121","severity":1,"message":"122","line":23,"column":31,"nodeType":"123","messageId":"124","endLine":23,"endColumn":33},{"ruleId":"117","severity":1,"message":"131","line":39,"column":7,"nodeType":"119","endLine":39,"endColumn":9,"suggestions":"132"},{"ruleId":"125","severity":1,"message":"133","line":2,"column":31,"nodeType":"127","messageId":"128","endLine":2,"endColumn":40},{"ruleId":"125","severity":1,"message":"134","line":7,"column":12,"nodeType":"127","messageId":"128","endLine":7,"endColumn":18},{"ruleId":"125","severity":1,"message":"135","line":7,"column":20,"nodeType":"127","messageId":"128","endLine":7,"endColumn":29},{"ruleId":"125","severity":1,"message":"136","line":8,"column":12,"nodeType":"127","messageId":"128","endLine":8,"endColumn":26},{"ruleId":"125","severity":1,"message":"137","line":8,"column":28,"nodeType":"127","messageId":"128","endLine":8,"endColumn":45},{"ruleId":"121","severity":1,"message":"122","line":16,"column":31,"nodeType":"123","messageId":"124","endLine":16,"endColumn":33},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkMatches'. Either include it or remove the dependency array.","ArrayExpression",["140"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar",["138"],["139"],"React Hook useEffect has a missing dependency: 'currentId'. Either include it or remove the dependency array.",["141"],"'useEffect' is defined but never used.","'movies' is assigned a value but never used.","'setMovies' is assigned a value but never used.","'selectedMovies' is assigned a value but never used.","'setSelectedMovies' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [checkMatches, obj]",{"range":"146","text":"147"},"Update the dependencies array to be: [currentId]",{"range":"148","text":"149"},[263,268],"[checkMatches, obj]",[1324,1326],"[currentId]"]