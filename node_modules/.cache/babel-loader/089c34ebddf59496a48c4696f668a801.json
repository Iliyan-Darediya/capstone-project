{"ast":null,"code":"var _jsxFileName = \"/Users/iliyandarediya/My Code/movie-matcher/src/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\n\nfunction ContextProvider({\n  children\n}) {\n  _s();\n\n  const [currentId, setCurrentId] = useState(0);\n  const [name, setName] = useState(\"Emily\");\n  useEffect(() => {\n    db.collection(\"User\").onSnapshot(snapshot => {\n      let changes = snapshot.docChanges();\n      changes.forEach(item => {\n        console.log(\"From context \" + item.doc.data());\n        console.log(\"From context \" + item.doc.id);\n\n        if (parseInt(item.doc.id) >= 0) {\n          setCurrentId(item.doc.id);\n        }\n      });\n    });\n  }, []); //console.log(\"current id from context \"+currentId)\n\n  const requestNewId = () => {\n    setCurrentId(prevId => {\n      let currentId = parseInt(prevId);\n      currentId++;\n      return currentId.toString();\n    });\n  };\n\n  const handleDelete = id => {\n    db.collection(\"User\").doc(id).delete();\n    console.log(\"handleDelete button Clicked\");\n  };\n\n  const handleAdd = name => {\n    setName(name);\n    db.collection(\"User\").doc(currentId).set({\n      [name]: [\"KevinAddedItem0\"]\n    }, {\n      merge: true\n    });\n  };\n\n  const addMovie = (id, movieName) => {\n    db.collection(\"User\").doc(id).update({\n      [name]: window.firebase.firestore.FieldValue.arrayUnion(movieName)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      currentId,\n      handleDelete,\n      handleAdd,\n      addMovie,\n      requestNewId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContextProvider, \"xCRa1qPpKHqOEoakQrpBa9hl5vM=\");\n\n_c = ContextProvider;\nexport { ContextProvider, Context };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/iliyandarediya/My Code/movie-matcher/src/Context.js"],"names":["React","useState","useEffect","db","Context","createContext","ContextProvider","children","currentId","setCurrentId","name","setName","collection","onSnapshot","snapshot","changes","docChanges","forEach","item","console","log","doc","data","id","parseInt","requestNewId","prevId","toString","handleDelete","delete","handleAdd","set","merge","addMovie","movieName","update","window","firebase","firestore","FieldValue","arrayUnion"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,EAAR,QAAiB,YAAjB;;AAEA,MAAMC,OAAO,gBAAGJ,KAAK,CAACK,aAAN,EAAhB;;AAEA,SAASC,eAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAAqC;AAAA;;AAEjC,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BR,QAAQ,CAAC,CAAD,CAAzC;AACA,QAAM,CAACS,IAAD,EAAMC,OAAN,IAAiBV,QAAQ,CAAC,OAAD,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVC,IAAAA,EAAE,CAACS,UAAH,CAAc,MAAd,EAAsBC,UAAtB,CAAiCC,QAAQ,IAAE;AACvC,UAAIC,OAAO,GAAGD,QAAQ,CAACE,UAAT,EAAd;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgBC,IAAI,IAAE;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgBF,IAAI,CAACG,GAAL,CAASC,IAAT,EAA5B;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgBF,IAAI,CAACG,GAAL,CAASE,EAArC;;AACA,YAAGC,QAAQ,CAACN,IAAI,CAACG,GAAL,CAASE,EAAV,CAAR,IAAuB,CAA1B,EAA4B;AACxBd,UAAAA,YAAY,CAACS,IAAI,CAACG,GAAL,CAASE,EAAV,CAAZ;AACH;AACJ,OAND;AAOH,KATD;AAUH,GAXQ,EAWP,EAXO,CAAT,CALiC,CAkBjC;;AAEA,QAAME,YAAY,GAAG,MAAI;AACrBhB,IAAAA,YAAY,CAACiB,MAAM,IAAE;AACjB,UAAIlB,SAAS,GAAGgB,QAAQ,CAACE,MAAD,CAAxB;AACAlB,MAAAA,SAAS;AACT,aAAOA,SAAS,CAACmB,QAAV,EAAP;AACH,KAJW,CAAZ;AAKH,GAND;;AAQA,QAAMC,YAAY,GAAGL,EAAE,IAAG;AACtBpB,IAAAA,EAAE,CAACS,UAAH,CAAc,MAAd,EAAsBS,GAAtB,CAA0BE,EAA1B,EAA8BM,MAA9B;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH,GAHD;;AAKA,QAAMU,SAAS,GAAIpB,IAAD,IAAS;AACvBC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAP,IAAAA,EAAE,CAACS,UAAH,CAAc,MAAd,EAAsBS,GAAtB,CAA0Bb,SAA1B,EAAqCuB,GAArC,CAAyC;AACrC,OAACrB,IAAD,GAAS,CAAC,iBAAD;AAD4B,KAAzC,EAEE;AAACsB,MAAAA,KAAK,EAAC;AAAP,KAFF;AAGH,GALD;;AAOA,QAAMC,QAAQ,GAAC,CAACV,EAAD,EAAIW,SAAJ,KAAgB;AAC3B/B,IAAAA,EAAE,CAACS,UAAH,CAAc,MAAd,EAAsBS,GAAtB,CAA0BE,EAA1B,EAA8BY,MAA9B,CAAqC;AACjC,OAACzB,IAAD,GAAO0B,MAAM,CAACC,QAAP,CAAgBC,SAAhB,CAA0BC,UAA1B,CAAqCC,UAArC,CAAgDN,SAAhD;AAD0B,KAArC;AAGH,GAJD;;AAMA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAC1B,MAAAA,SAAD;AAAWoB,MAAAA,YAAX;AAAwBE,MAAAA,SAAxB;AAAkCG,MAAAA,QAAlC;AAA2CR,MAAAA;AAA3C,KAAzB;AAAA,cACKlB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnDQD,e;;KAAAA,e;AAqDT,SAAQA,eAAR,EAAyBF,OAAzB","sourcesContent":["import React,{useState,useEffect} from \"react\"\nimport {db} from \"./firebase\"\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n\n    const [currentId,setCurrentId] = useState(0)\n    const [name,setName] = useState(\"Emily\")\n\n    useEffect(()=>{\n        db.collection(\"User\").onSnapshot(snapshot=>{\n            let changes = snapshot.docChanges()\n            changes.forEach(item=>{\n                console.log(\"From context \"+item.doc.data())\n                console.log(\"From context \"+item.doc.id)\n                if(parseInt(item.doc.id)>=0){\n                    setCurrentId(item.doc.id)\n                }\n            })\n        }) \n    },[])\n    \n    //console.log(\"current id from context \"+currentId)\n    \n    const requestNewId = ()=>{\n        setCurrentId(prevId=>{\n            let currentId = parseInt(prevId)\n            currentId++\n            return(currentId.toString())\n        })\n    }\n\n    const handleDelete = id =>{\n        db.collection(\"User\").doc(id).delete()\n        console.log(\"handleDelete button Clicked\")\n    }\n\n    const handleAdd = (name) =>{\n        setName(name)\n        db.collection(\"User\").doc(currentId).set({\n            [name] : [\"KevinAddedItem0\"]\n        },{merge:true})\n    }\n\n    const addMovie=(id,movieName)=>{\n        db.collection(\"User\").doc(id).update({\n            [name]:window.firebase.firestore.FieldValue.arrayUnion(movieName)\n        })\n    }\n\n    return (\n        <Context.Provider value={{currentId,handleDelete,handleAdd,addMovie,requestNewId}}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}"]},"metadata":{},"sourceType":"module"}