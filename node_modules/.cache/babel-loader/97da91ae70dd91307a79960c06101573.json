{"ast":null,"code":"var _jsxFileName = \"/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/Cheecker.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from \"react\";\nimport { Context } from '../Context';\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cheecker() {\n  _s();\n\n  const {\n    checkMatches\n  } = useContext(Context);\n  const {\n    result\n  } = useContext(Context);\n  const {\n    obj\n  } = useContext(Context);\n  useEffect(() => {\n    console.log(\"Cheecker loaded\");\n    const dbRef = firebase.database().ref();\n    dbRef.child(\"User\").child(9).get().then(snapshot => {\n      if (snapshot.exists()) {\n        console.log(snapshot.val());\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  /* useEffect(()=>{\n      checkMatches()\n  },[obj]) */\n\n  let i = result.map(r => /*#__PURE__*/_jsxDEV(\"h9\", {\n    children: r\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 27\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cheecker page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cheecker, \"3af9cOG72UwcSgRcsET/siWQ9UQ=\");\n\n_c = Cheecker;\nexport default Cheecker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cheecker\");","map":{"version":3,"sources":["/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/Cheecker.js"],"names":["useContext","useEffect","Context","firebase","Cheecker","checkMatches","result","obj","console","log","dbRef","database","ref","child","get","then","snapshot","exists","val","catch","error","i","map","r"],"mappings":";;;AAAA,SAAQA,UAAR,EAAoBC,SAApB,QAAoC,OAApC;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAACC,IAAAA;AAAD,MAAiBL,UAAU,CAACE,OAAD,CAAjC;AACA,QAAM;AAACI,IAAAA;AAAD,MAAWN,UAAU,CAACE,OAAD,CAA3B;AACA,QAAM;AAACK,IAAAA;AAAD,MAAQP,UAAU,CAACE,OAAD,CAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAMC,KAAK,GAAGP,QAAQ,CAACQ,QAAT,GAAoBC,GAApB,EAAd;AACAF,IAAAA,KAAK,CAACG,KAAN,CAAY,MAAZ,EAAoBA,KAApB,CAA0B,CAA1B,EAA6BC,GAA7B,GAAmCC,IAAnC,CAAyCC,QAAD,IAAc;AACtD,UAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;AACnBT,QAAAA,OAAO,CAACC,GAAR,CAAYO,QAAQ,CAACE,GAAT,EAAZ;AACH,OAFD,MAEO;AACHV,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACA,KAND,EAMGU,KANH,CAMUC,KAAD,IAAW;AACpBZ,MAAAA,OAAO,CAACY,KAAR,CAAcA,KAAd;AACC,KARD;AASH,GAZQ,EAYP,EAZO,CAAT;AAaA;AACJ;AACA;;AAEI,MAAIC,CAAC,GAAGf,MAAM,CAACgB,GAAP,CAAWC,CAAC,iBAAE;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAd,CAAR;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACA;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA9BQnB,Q;;KAAAA,Q;AAgCT,eAAeA,QAAf","sourcesContent":["import {useContext, useEffect} from \"react\";\nimport {Context} from '../Context'\nimport firebase from \"firebase\";\nfunction Cheecker() {\n    const {checkMatches} = useContext(Context)\n    const {result} = useContext(Context)\n    const {obj} = useContext(Context)\n\n    useEffect(()=>{\n        console.log(\"Cheecker loaded\")\n        const dbRef = firebase.database().ref();\n        dbRef.child(\"User\").child(9).get().then((snapshot) => {\n        if (snapshot.exists()) {\n            console.log(snapshot.val());\n        } else {\n            console.log(\"No data available\");\n        }\n        }).catch((error) => {\n        console.error(error);\n        });\n    },[])\n    /* useEffect(()=>{\n        checkMatches()\n    },[obj]) */\n    \n    let i = result.map(r=><h9>{r}</h9>)\n    return (\n        <div className=\"App\">\n        <header className=\"App-header\">\n            <h1>Cheecker page</h1>\n        </header>\n        </div>\n    );\n}\n  \nexport default Cheecker;"]},"metadata":{},"sourceType":"module"}