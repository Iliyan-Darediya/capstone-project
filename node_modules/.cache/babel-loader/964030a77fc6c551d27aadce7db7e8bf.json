{"ast":null,"code":"var _jsxFileName = \"/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/Cheecker.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context } from '../Context';\nimport { db } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cheecker() {\n  _s();\n\n  //const {checkMatches} = useContext(Context)\n  const {\n    result\n  } = useContext(Context);\n  const {\n    obj\n  } = useContext(Context);\n  const [data, setData] = useState({});\n  const [duplicateArray, setDuplicateArray] = useState([]);\n  useEffect(() => {\n    db.collection(\"User\").onSnapshot(snapshot => {\n      let changes = snapshot.docChanges();\n      changes.forEach(item => {\n        if (item.doc.id == 9) {\n          setData(item.doc.data());\n        }\n      });\n    });\n  }, []);\n  useEffect(() => {\n    let bunch = [];\n\n    for (const name in data) {\n      bunch.push(data[name]);\n    }\n\n    let ondDBunch = [].concat(...bunch);\n    ondDBunch.sort();\n    setDuplicateArray([...new Set(ondDBunch.filter((value, index, self) => self.indexOf(value) !== index))]);\n    console.log(duplicateArray);\n    setDuplicateArray(duplicateArray.filter(movie => movie !== \"KevinAddedItem0\"));\n    console.log(duplicateArray);\n  }, [data]);\n  useEffect(() => {\n    console.log(duplicateArray);\n  }, [duplicateArray]);\n\n  const checkMatches = moviesArray => {\n    let index;\n    const dupes = [];\n\n    for (let i = 0; i < moviesArray.length; i++) {\n      index = Math.abs(moviesArray[i]) - 1;\n\n      if (moviesArray[i] < 0) {\n        dupes.push(index + 1);\n      } else {\n        moviesArray[index] *= -1;\n      }\n    }\n  };\n\n  let i = result.map(r => /*#__PURE__*/_jsxDEV(\"h9\", {\n    children: r\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 27\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cheecker page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cheecker, \"9vEKaLF8YVd6LZ5jOWoYPefyAXQ=\");\n\n_c = Cheecker;\nexport default Cheecker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cheecker\");","map":{"version":3,"sources":["/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/Cheecker.js"],"names":["useContext","useEffect","useState","Context","db","Cheecker","result","obj","data","setData","duplicateArray","setDuplicateArray","collection","onSnapshot","snapshot","changes","docChanges","forEach","item","doc","id","bunch","name","push","ondDBunch","concat","sort","Set","filter","value","index","self","indexOf","console","log","movie","checkMatches","moviesArray","dupes","i","length","Math","abs","map","r"],"mappings":";;;AAAA,SAAQA,UAAR,EAAoBC,SAApB,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,EAAR,QAAiB,aAAjB;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAChB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAWN,UAAU,CAACG,OAAD,CAA3B;AACA,QAAM;AAACI,IAAAA;AAAD,MAAQP,UAAU,CAACG,OAAD,CAAxB;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,EAAE,CAACQ,UAAH,CAAc,MAAd,EAAsBC,UAAtB,CAAiCC,QAAQ,IAAE;AACvC,UAAIC,OAAO,GAAGD,QAAQ,CAACE,UAAT,EAAd;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgBC,IAAI,IAAE;AAClB,YAAGA,IAAI,CAACC,GAAL,CAASC,EAAT,IAAa,CAAhB,EAAkB;AACdX,UAAAA,OAAO,CAACS,IAAI,CAACC,GAAL,CAASX,IAAT,EAAD,CAAP;AACH;AACJ,OAJD;AAKH,KAPD;AAQH,GATQ,EASP,EATO,CAAT;AAUAP,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIoB,KAAK,GAAG,EAAZ;;AACA,SAAI,MAAMC,IAAV,IAAkBd,IAAlB,EAAuB;AACnBa,MAAAA,KAAK,CAACE,IAAN,CAAWf,IAAI,CAACc,IAAD,CAAf;AACH;;AACD,QAAIE,SAAS,GAAG,GAAGC,MAAH,CAAU,GAAGJ,KAAb,CAAhB;AACAG,IAAAA,SAAS,CAACE,IAAV;AACAf,IAAAA,iBAAiB,CAAC,CAAC,GAAG,IAAIgB,GAAJ,CAClBH,SAAS,CAACI,MAAV,CAAiB,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,KAAwBA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KAAjE,CADkB,CAAJ,CAAD,CAAjB;AAGAG,IAAAA,OAAO,CAACC,GAAR,CAAYxB,cAAZ;AACAC,IAAAA,iBAAiB,CAACD,cAAc,CAACkB,MAAf,CAAsBO,KAAK,IAAEA,KAAK,KAAG,iBAArC,CAAD,CAAjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYxB,cAAZ;AACH,GAbQ,EAaP,CAACF,IAAD,CAbO,CAAT;AAeAP,EAAAA,SAAS,CAAC,MAAI;AACVgC,IAAAA,OAAO,CAACC,GAAR,CAAYxB,cAAZ;AACH,GAFQ,EAEP,CAACA,cAAD,CAFO,CAAT;;AAIA,QAAM0B,YAAY,GAAGC,WAAW,IAAG;AAC/B,QAAIP,KAAJ;AACA,UAAMQ,KAAK,GAAG,EAAd;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAACF,WAAW,CAACG,MAA5B,EAAmCD,CAAC,EAApC,EAAuC;AACnCT,MAAAA,KAAK,GAAGW,IAAI,CAACC,GAAL,CAASL,WAAW,CAACE,CAAD,CAApB,IAAyB,CAAjC;;AAEA,UAAGF,WAAW,CAACE,CAAD,CAAX,GAAe,CAAlB,EAAoB;AAChBD,QAAAA,KAAK,CAACf,IAAN,CAAWO,KAAK,GAAE,CAAlB;AACH,OAFD,MAEK;AACDO,QAAAA,WAAW,CAACP,KAAD,CAAX,IAAsB,CAAC,CAAvB;AACH;AACJ;AACJ,GAZD;;AAcA,MAAIS,CAAC,GAAGjC,MAAM,CAACqC,GAAP,CAAWC,CAAC,iBAAE;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAd,CAAR;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACA;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAzDQvC,Q;;KAAAA,Q;AA2DT,eAAeA,QAAf","sourcesContent":["import {useContext, useEffect, useState} from \"react\";\nimport {Context} from '../Context'\nimport {db} from \"../firebase\";\nfunction Cheecker() {\n    //const {checkMatches} = useContext(Context)\n    const {result} = useContext(Context)\n    const {obj} = useContext(Context)\n    const [data, setData] = useState({})\n    const [duplicateArray, setDuplicateArray] = useState([])\n    useEffect(()=>{\n        db.collection(\"User\").onSnapshot(snapshot=>{\n            let changes = snapshot.docChanges()\n            changes.forEach(item=>{\n                if(item.doc.id==9){\n                    setData(item.doc.data())\n                }\n            })\n        })\n    },[])\n    useEffect(()=>{\n        let bunch = []\n        for(const name in data){\n            bunch.push(data[name])\n        }\n        let ondDBunch = [].concat(...bunch)\n        ondDBunch.sort()\n        setDuplicateArray([...new Set(\n            ondDBunch.filter((value, index, self) => self.indexOf(value) !== index))]\n        );\n        console.log(duplicateArray)\n        setDuplicateArray(duplicateArray.filter(movie=>movie!==\"KevinAddedItem0\"))\n        console.log(duplicateArray)\n    },[data])\n\n    useEffect(()=>{\n        console.log(duplicateArray)\n    },[duplicateArray])\n    \n    const checkMatches = moviesArray =>{\n        let index\n        const dupes = []\n        for(let i = 0;i<moviesArray.length;i++){\n            index = Math.abs(moviesArray[i])-1\n\n            if(moviesArray[i]<0){\n                dupes.push(index +1)\n            }else{\n                moviesArray[index] *= -1\n            }\n        }\n    }\n    \n    let i = result.map(r=><h9>{r}</h9>)\n    return (\n        <div className=\"App\">\n        <header className=\"App-header\">\n            <h1>Cheecker page</h1>\n        </header>\n        </div>\n    );\n}\n  \nexport default Cheecker;"]},"metadata":{},"sourceType":"module"}