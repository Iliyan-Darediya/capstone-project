{"ast":null,"code":"var _jsxFileName = \"/Users/iliyandarediya/My Code/movie-matcher/src/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\n\nfunction ContextProvider({\n  children\n}) {\n  _s();\n\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    db.collection(\"User\").onSnapshot(snapshot => {\n      let changes = snapshot.docChanges();\n      changes.forEach(item => {\n        console.log(\"From context \" + item.doc.data());\n        console.log(\"From context \" + item.doc.id);\n\n        if (parseInt(item.doc.id) >= 0) {\n          setCurrentId(item.doc.id);\n        }\n      });\n    });\n  }, []); //console.log(\"current id from context \"+currentId)\n\n  const handleDelete = id => {\n    db.collection(\"User\").doc(id).delete();\n    console.log(\"handleDelete button Clicked\");\n  };\n\n  const handleAdd = (name, age) => {\n    setCurrentId(prevId => {\n      let currentId = parseInt(prevId);\n      currentId++;\n      return currentId.toString();\n    });\n    db.collection(\"User\").doc(currentId).set({\n      Name: name,\n      Age: age,\n      AddedItem: [\"KevinAddedItem0\"]\n    });\n  };\n\n  const addMovie = (id, arrayData) => {\n    db.collection(\"User\").doc(id).update({\n      movieName: window.firebase.firestore.FieldValue.arrayUnion(arrayData)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      currentId,\n      handleDelete,\n      handleAdd,\n      addMovie\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContextProvider, \"0hVbTRuboCMlObcXoTAOhHZgeug=\");\n\n_c = ContextProvider;\nexport { ContextProvider, Context };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/iliyandarediya/My Code/movie-matcher/src/Context.js"],"names":["React","useState","useEffect","db","Context","createContext","ContextProvider","children","currentId","setCurrentId","collection","onSnapshot","snapshot","changes","docChanges","forEach","item","console","log","doc","data","id","parseInt","handleDelete","delete","handleAdd","name","age","prevId","toString","set","Name","Age","AddedItem","addMovie","arrayData","update","movieName","window","firebase","firestore","FieldValue","arrayUnion"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,EAAR,QAAiB,YAAjB;;AAEA,MAAMC,OAAO,gBAAGJ,KAAK,CAACK,aAAN,EAAhB;;AAEA,SAASC,eAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAAqC;AAAA;;AAEjC,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BR,QAAQ,CAAC,CAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVC,IAAAA,EAAE,CAACO,UAAH,CAAc,MAAd,EAAsBC,UAAtB,CAAiCC,QAAQ,IAAE;AACvC,UAAIC,OAAO,GAAGD,QAAQ,CAACE,UAAT,EAAd;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgBC,IAAI,IAAE;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgBF,IAAI,CAACG,GAAL,CAASC,IAAT,EAA5B;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgBF,IAAI,CAACG,GAAL,CAASE,EAArC;;AACA,YAAGC,QAAQ,CAACN,IAAI,CAACG,GAAL,CAASE,EAAV,CAAR,IAAuB,CAA1B,EAA4B;AACxBZ,UAAAA,YAAY,CAACO,IAAI,CAACG,GAAL,CAASE,EAAV,CAAZ;AACH;AACJ,OAND;AAOH,KATD;AAUH,GAXQ,EAWP,EAXO,CAAT,CAJiC,CAiBjC;;AAEA,QAAME,YAAY,GAAGF,EAAE,IAAG;AACtBlB,IAAAA,EAAE,CAACO,UAAH,CAAc,MAAd,EAAsBS,GAAtB,CAA0BE,EAA1B,EAA8BG,MAA9B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH,GAHD;;AAKA,QAAMO,SAAS,GAAG,CAACC,IAAD,EAAMC,GAAN,KAAa;AAC3BlB,IAAAA,YAAY,CAACmB,MAAM,IAAE;AACjB,UAAIpB,SAAS,GAAGc,QAAQ,CAACM,MAAD,CAAxB;AACApB,MAAAA,SAAS;AACT,aAAOA,SAAS,CAACqB,QAAV,EAAP;AACH,KAJW,CAAZ;AAKA1B,IAAAA,EAAE,CAACO,UAAH,CAAc,MAAd,EAAsBS,GAAtB,CAA0BX,SAA1B,EAAqCsB,GAArC,CAAyC;AACrCC,MAAAA,IAAI,EAAEL,IAD+B;AAErCM,MAAAA,GAAG,EAAEL,GAFgC;AAGrCM,MAAAA,SAAS,EAAC,CAAC,iBAAD;AAH2B,KAAzC;AAKH,GAXD;;AAaA,QAAMC,QAAQ,GAAC,CAACb,EAAD,EAAIc,SAAJ,KAAgB;AAC3BhC,IAAAA,EAAE,CAACO,UAAH,CAAc,MAAd,EAAsBS,GAAtB,CAA0BE,EAA1B,EAA8Be,MAA9B,CAAqC;AACjCC,MAAAA,SAAS,EAACC,MAAM,CAACC,QAAP,CAAgBC,SAAhB,CAA0BC,UAA1B,CAAqCC,UAArC,CAAgDP,SAAhD;AADuB,KAArC;AAGH,GAJD;;AAMA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAC3B,MAAAA,SAAD;AAAWe,MAAAA,YAAX;AAAwBE,MAAAA,SAAxB;AAAkCS,MAAAA;AAAlC,KAAzB;AAAA,cACK3B;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAhDQD,e;;KAAAA,e;AAkDT,SAAQA,eAAR,EAAyBF,OAAzB","sourcesContent":["import React,{useState,useEffect} from \"react\"\nimport {db} from \"./firebase\"\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n\n    const [currentId,setCurrentId] = useState(0)\n\n    useEffect(()=>{\n        db.collection(\"User\").onSnapshot(snapshot=>{\n            let changes = snapshot.docChanges()\n            changes.forEach(item=>{\n                console.log(\"From context \"+item.doc.data())\n                console.log(\"From context \"+item.doc.id)\n                if(parseInt(item.doc.id)>=0){\n                    setCurrentId(item.doc.id)\n                }\n            })\n        }) \n    },[])\n    \n    //console.log(\"current id from context \"+currentId)\n\n    const handleDelete = id =>{\n        db.collection(\"User\").doc(id).delete()\n        console.log(\"handleDelete button Clicked\")\n    }\n\n    const handleAdd = (name,age) =>{\n        setCurrentId(prevId=>{\n            let currentId = parseInt(prevId)\n            currentId++\n            return(currentId.toString())\n        })\n        db.collection(\"User\").doc(currentId).set({\n            Name: name,\n            Age :age,\n            AddedItem:[\"KevinAddedItem0\"]\n        })\n    }\n\n    const addMovie=(id,arrayData)=>{\n        db.collection(\"User\").doc(id).update({\n            movieName:window.firebase.firestore.FieldValue.arrayUnion(arrayData)\n        })\n    }\n\n    return (\n        <Context.Provider value={{currentId,handleDelete,handleAdd,addMovie}}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}"]},"metadata":{},"sourceType":"module"}