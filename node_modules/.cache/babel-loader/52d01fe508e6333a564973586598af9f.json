{"ast":null,"code":"var _jsxFileName = \"/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/Cheecker.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context } from '../Context';\nimport { db } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cheecker() {\n  _s();\n\n  //const {checkMatches} = useContext(Context)\n  const {\n    result\n  } = useContext(Context);\n  const {\n    obj\n  } = useContext(Context);\n  const [data, setData] = useState({});\n  const [duplicateArray, setDuplicateArray] = useState([]);\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    db.collection(\"User\").onSnapshot(snapshot => {\n      let changes = snapshot.docChanges();\n      changes.forEach(item => {\n        if (item.doc.id == 11) {\n          setData(item.doc.data());\n        }\n      });\n    });\n  }, []);\n  useEffect(() => {\n    let bunch = [];\n\n    for (const name in data) {\n      bunch.push(data[name]);\n    }\n\n    let ondDBunch = [].concat(...bunch);\n    ondDBunch.sort();\n    console.log(ondDBunch);\n    ondDBunch = ondDBunch.filter((value, index, self) => self.indexOf(value) !== index);\n    console.log(ondDBunch);\n    setDuplicateArray(ondDBunch);\n    setDuplicateArray(movies => movies.filter(movie => movie !== \"KevinAddedItem0\"));\n    console.log(duplicateArray);\n  }, [data]);\n  useEffect(() => {\n    if (duplicateArray.length > 0) {\n      duplicateArray.map(movieId => {\n        console.log(movieId);\n        searchMovies(movieId);\n      });\n    }\n  }, [duplicateArray]);\n\n  const searchMovies = async (e, movieId) => {\n    e.preventDefault();\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US`;\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setMovies(data.results);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    console.log(movies);\n  }, [movies]);\n  /* const checkMatches = moviesArray =>{\n      let index\n      const dupes = []\n      for(let i = 0;i<moviesArray.length;i++){\n          index = Math.abs(moviesArray[i])-1\n           if(moviesArray[i]<0){\n              dupes.push(index +1)\n          }else{\n              moviesArray[index] *= -1\n          }\n      }\n  } */\n\n  /* implement an input box to get the id and show the movie card based on the movie id and the API */\n\n  let i = result.map(r => /*#__PURE__*/_jsxDEV(\"h9\", {\n    children: r\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 27\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cheecker page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cheecker, \"GaTJ8k+FHieN4jxTcis7UytkPU4=\");\n\n_c = Cheecker;\nexport default Cheecker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cheecker\");","map":{"version":3,"sources":["/Users/iliyandarediya/Documents/GitHub/Capstone-project/src/components/Cheecker.js"],"names":["useContext","useEffect","useState","Context","db","Cheecker","result","obj","data","setData","duplicateArray","setDuplicateArray","movies","setMovies","collection","onSnapshot","snapshot","changes","docChanges","forEach","item","doc","id","bunch","name","push","ondDBunch","concat","sort","console","log","filter","value","index","self","indexOf","movie","length","map","movieId","searchMovies","e","preventDefault","url","res","fetch","json","results","err","error","i","r"],"mappings":"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","sourcesContent":["import {useContext, useEffect, useState} from \"react\";\nimport {Context} from '../Context'\nimport {db} from \"../firebase\";\nfunction Cheecker() {\n    //const {checkMatches} = useContext(Context)\n    const {result} = useContext(Context)\n    const {obj} = useContext(Context)\n    const [data, setData] = useState({})\n    const [duplicateArray, setDuplicateArray] = useState([])\n    const [movies, setMovies] = useState([]);\n    useEffect(()=>{\n        db.collection(\"User\").onSnapshot(snapshot=>{\n            let changes = snapshot.docChanges()\n            changes.forEach(item=>{\n                if(item.doc.id==11){\n                    setData(item.doc.data())\n                }\n            })\n        })\n    },[])\n    useEffect(()=>{\n        let bunch = []\n        for(const name in data){\n            bunch.push(data[name])\n        }\n        let ondDBunch = [].concat(...bunch)\n        ondDBunch.sort()\n        console.log(ondDBunch)\n        ondDBunch = ondDBunch.filter((value, index, self) => self.indexOf(value) !== index)\n        console.log(ondDBunch)\n        setDuplicateArray(ondDBunch)\n        setDuplicateArray(movies => movies.filter(movie=>movie!==\"KevinAddedItem0\"))\n        console.log(duplicateArray)\n    },[data])\n\n    useEffect(()=>{\n        if(duplicateArray.length>0){\n            duplicateArray.map(movieId=>{\n                console.log(movieId)\n                searchMovies(movieId)\n            })\n        }\n\n    },[duplicateArray])\n    const searchMovies = async (e, movieId) => {  \n        e.preventDefault() \n        const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US`;\n        try {\n            const res = await fetch(url);\n            const data  = await res.json();\n            setMovies(data.results);\n        }catch(err){\n            console.error(err);\n        }\n    }\n    useEffect(()=>{\n        console.log(movies)\n    },[movies])\n    /* const checkMatches = moviesArray =>{\n        let index\n        const dupes = []\n        for(let i = 0;i<moviesArray.length;i++){\n            index = Math.abs(moviesArray[i])-1\n\n            if(moviesArray[i]<0){\n                dupes.push(index +1)\n            }else{\n                moviesArray[index] *= -1\n            }\n        }\n    } */\n    /* implement an input box to get the id and show the movie card based on the movie id and the API */\n    let i = result.map(r=><h9>{r}</h9>)\n    return (\n        <div className=\"App\">\n        <header className=\"App-header\">\n            <h1>Cheecker page</h1>\n        </header>\n        </div>\n    );\n}\n  \nexport default Cheecker;"]},"metadata":{},"sourceType":"module"}